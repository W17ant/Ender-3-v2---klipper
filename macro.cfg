# Adds print macros such as start print and end print.
# in OrcaSlicer, as start gcode you can define "START_PRINT" and end gcode "END_PRINT"


#=====================================================
# START PRINT
#=====================================================

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(180)|float %}
    # Start bed heating (but don't wait for it)
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}


    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z0.15 F300
  
#BUILD MESH

    #G28 ; Home all axes

    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default

 #SMART PARK - Wait for nozzle temperature close to print area
    Smart_Park
    smart_park_height: 10
    
 # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP} 

# Prime line
    LINE_PURGE
    M117 Whooo were FUCKING Printing...

#=====================================================
# END PRINT
#=====================================================

[gcode_macro END_PRINT]
gcode:
    # move z up
    G91
    G1 E-3 Z+20 F3000
    # absolute xy 
    G90
    G1 X0 Y220 F2000
    #disable hotend and heated bed - turn off cooling fan
    M104 S0
    M140 S0
    M106 S0  
    # disable steppers
    M84
    # Set bed to 0C (off) - Set Hot-end to 0C (off)
    M104 S0 
    M140 S0 

    M117 Print Finished
    BED_MESH_CLEAR

#=====================================================
# PID TUNING
#=====================================================

[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(210)|float %} 
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG
 
[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %} 
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG




#=====================================================
# HOMING OVERRIDE - Not Needed
#===================================================== 

# [homing_override]
# gcode:
#     G90 ; Use absolute position mode
#     G1 Z10 ; Move up 10mm
#     G28 X Y
#     G1 X117 Y150 F6000 ; Change the X and Y coordinates to the center of your print bed
#     G28 Z
# set_position_z: 0.0


#=====================================================
# BED MESH CALIBRATE & PRIME LINE
#=====================================================

# KAMP Installed
# https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging
# add [include KAMP_Settings.cfg] to printer.cfg

#=====================================================
# BUILD THE BED MESH
#=====================================================

# G29 that does (1) home all (2) get bed mesh (3) move 
# nozzle to corner so it doesnt ooze on the bed while heating up.
[gcode_macro G29]
gcode:
    G28
    BED_MESH_CALIBRATE
    G0 X360 Y360 Z10 F6000
    BED_MESH_PROFILE save=default

#=====================================================
# CHECK THE BED MESH
#=====================================================

[gcode_macro CHECK_MESH]
gcode:
    {% set ns = namespace(min_point = printer.bed_mesh.probed_matrix[0][0] ,max_point = printer.bed_mesh.probed_matrix[0][0]) %}

    {% for data_row in printer.bed_mesh.probed_matrix %}
        {% for probe_point in data_row %}
            {% if ns.min_point > probe_point %}
                {% set ns.min_point =  probe_point %}
            {% endif %}
            {% if ns.max_point < probe_point %}
                {% set ns.max_point =  probe_point %}
            {% endif %}
        {% endfor %}
    {% endfor %}

    { action_respond_info( "Mesh delta : " + (ns.max_point - ns.min_point) | string)}
    {% if ns.max_point - ns.min_point > params.THRESHOLD|default(0.3)|float %}
        { action_respond_info("Mesh Error!")}
        ;CANCEL_PRINT
    {% else %}
        { action_respond_info("Mesh OK!")}
    {% endif %}

#=====================================================
# BED LEVELING MACRO
#=====================================================

[gcode_macro BED_LEVELING]
description: Heats bed and starts process to level the bed with the screws
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %} 
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
  G28
  M190 S{BED_TEMP}
  SCREWS_TILT_CALCULATE

#=====================================================
# PARK PRINTER
#=====================================================

# Park toolhead TO
[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking toolhead
    G91
    G1 Z10 F600 # move up 10 mm
    G90
    G1 X5 Y225 F4000 # move to park position
    RESTORE_GCODE_STATE NAME=parking

#=====================================================
# LOW TEMP CHECK
#=====================================================

# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested! 
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@210)
[gcode_macro LOW_TEMP_CHECK]
gcode:
    {% set T_EXTRUDER = params.T_EXTRUDER|default(210) %}
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T_EXTRUDER %}  # heat to T.
            M118 No setpoint, heating to {T_EXTRUDER}.
            M109 S{T_EXTRUDER}
        {% endif %}
    {% endif %}

#======================================================
# LOAD FILAMENT
#======================================================

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    M117 Loading Filament
    M83
    G92 E0.0
    LOW_TEMP_CHECK
    G1 E50 F200  # some extra to prime the nozzle --> slower 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=loading_filament


#======================================================
# UNLOAD FILAMENT
#======================================================

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    M125 # park
    M117 Unloading Filament 
    LOW_TEMP_CHECK
    G91 # set relative
    G1 E10 F100 
    G92 E0.0
    G1 E-50 F200 # the E is the length of the bowden tube (420mm) + 100 mm. 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=unloading_filament
 

#======================================================
# FILAMENT CHANGE
#======================================================

[gcode_macro M600]
gcode:
    M117 Filament Change
    M118 Filament Change
    SAVE_GCODE_STATE NAME=filament_change
    PAUSE
    LOW_TEMP_CHECK
    G91 # relative
    G1 E-1 F300 # retract 1
    M125 # park
    G1 E-350 F4000
    RESTORE_GCODE_STATE NAME=filament_change

#======================================================
# COUNTDOWN MACRO
#======================================================

[gcode_macro COUNTDOWN]
gcode:
    {% set MSG = params.MSG|default("Time: ") %}
    {% set TIME = params.TIME|default(10) %}
    # countdown 
    {% for s in range(TIME|int, 0, -1) %}
        # dwell 1 second
        G4 P1000
        # echo
        M117 {params.MSG} {s}s
        M118 {params.MSG} {s}s
    {% endfor %}


[pause_resume]

#=====================================================
# PAUSE
#=====================================================

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(5) %}      #edit to your park position
    {% set y = params.Y|default(225) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

#=====================================================
# RESUME
#=====================================================

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

#=====================================================
# CANCEL
#=====================================================

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

#=====================================================
# Z PROBE CALIBRATE
#=====================================================

[gcode_macro Z_PROBE_CALIBRATE]

gcode:
      {% set BED_TEMP = params.BED_TEMP|default(60)|float %} 
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
      G28
      M190 S{BED_TEMP}
      PROBE_CALIBRATE

#=====================================================
# PREHEATS
#=====================================================

[gcode_macro PREHEAT_PLA]
description: Preheats extruder and bed for PLA printing, extruder set to 150 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

[gcode_macro PREHEAT_ABS]
description: Preheats extruder and bed for ABS printing, extruder set to 180 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(180)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(80)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

[gcode_macro PREHEAT_PETG]
description: Preheats extruder and bed for PETG printing, extruder set to 170 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(170)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

[gcode_macro PREHEAT_BED_ONLY]
description: Preheats extruder and bed for PETG printing, extruder set to 170 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(170)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

[gcode_macro COOL]
description: Turns off all heaters
gcode:
  TURN_OFF_HEATERS
