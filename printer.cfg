# This file contains pin mappings for the stock 2020 Creality Ender 3
# with the 32-bit Creality 4.2.2 board. To use this config, during
# "make menuconfig" select the STM32F103 with a "28KiB bootloader" and
# serial (on USART1 PA10/PA9) communication.
# adapted for my printer ender3-4.2.2

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

#####################################################################
# Ender 3 V2 with BLTouch
#####################################################################
# Specs:
# - 3DFused linear rails X/Y/Z
# - BLTouch
# - Physical endstops on XY
# - Creality Sprite Pro hot end
# - Noctua 12v NF-A9-14 PWM Silent fan - PSU fan
# - Noctua 12v NF-A9-14 PWM Silent fan - Mainboard fan
# - KUSBA Accelerometer - ADXL345 Rampon Firmware
# - Dual Z 1.8 Degree Creality stepper motors
# - Raspberry Pi 4 8gb - Fanshim
# - Pimoroni Hyperpixel 4.0 display 
# - Makerhawk Pi IR Camera 5mp OV5647


[include mainsail.cfg]
[include macro.cfg]
[include timelapse.cfg]
#[include adxlmcu.cfg]
[include KAMP_Settings.cfg]


[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

[temperature_sensor raspberry_pi]

sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2600
max_z_velocity: 50
square_corner_velocity: 5.0
max_z_accel: 100

#####################################################################
# X/Y/Z Stepper Settings - 1.8 Degree Creality stepper motors
#####################################################################


[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0.5
position_max: 233
homing_speed: 100

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: 5
position_max: 230
homing_speed: 100

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PA7
endstop_pin: probe:z_virtual_endstop
position_max: 220
position_min:-4.5


#####################################################################
# Creality Sprite Extruder Pro Hot End .4mm nozzle 
#####################################################################


[extruder]
max_extrude_only_distance: 500.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.53
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
max_extrude_cross_section: 5

pressure_advance: 0.038 
#PLA - TBC / PLA+ - 0.038 / PETG - TBC / ABS - TBC / TPU - TBC/
# More info on set up via the links below
# https://realdeuce.github.io/Voron/PA/pressure_advance.html
# https://www.youtube.com/watch?v=LVp15eGXwm0

#control: pid
# tuned for Creality Sprite Pro with 210 degree Celsius target
# control = pid
# pid_kp = 21.100
# pid_ki = 1.407
# pid_kd = 79.124

min_temp: 0
max_temp: 265


#####################################################################
# Bed Heater using 220W factory bed heater from Creality - with PEI Sheet
#####################################################################

[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 60 degree Celsius target
#pid_Kp: 73.275
#pid_Ki: 1.581
#pid_Kd: 849.075
min_temp: 0
max_temp: 130

#####################################################################
# Fans
#####################################################################

[fan]
pin: PA0

#####################################################################
# Probe & Mesh
#####################################################################

[safe_z_home]
#home_xy_position: 117.5,117.5   # Coordinates for center of print bed
home_xy_position: 146.5, 159.5   # Change coordinates to the center of your print bed to include probe offset
# x_offset: -29
# y_offset: -42
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

# Pin mappings for BL_T port
[bltouch]
sensor_pin: ^PB1
control_pin: PB0
pin_up_touch_mode_reports_triggered: False
probe_with_touch_mode: True
stow_on_each_sample: False
x_offset: -29
y_offset: -42
#z_offset = 3.460
pin_move_time: 0.4
samples: 3

[bed_mesh]
speed: 250
horizontal_move_z: 7
mesh_min: 30, 30
mesh_max: 185, 185
probe_count: 6, 6
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0


#####################################################################
# Misc
#####################################################################

[exclude_object]

# FW Retract G10 G11
[firmware_retraction]
retract_length: 0.6
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 85
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 30
#   The speed of unretraction, in mm/s. The default is 10 mm/s.


# Custom G29 that does (1) home all (2) get bed mesh (3) move nozzle to corner so it doesnt ooze on the bed while heating up.
[gcode_macro G29]
gcode:
    G28
    BED_MESH_CALIBRATE
    G0 X10 Y10 Z10 F6000


# Pause/resume support
[pause_resume]

# ARC support
[gcode_arcs]
resolution = 0.25


######################################################################
# Screw Tilt Adjust & Bed Screws
######################################################################

# This adds a screw tilt adjust command that probes certain points on the bed and recommends new bed screw positions (turn clockwise this much etc)
[screws_tilt_adjust]
# x_offset: -29
# y_offset: -42

#screw1: 146.5,159.5
#screw1_name: Middle
screw1: 62,75
screw1_name: Front left screw
screw2: 62,230
screw2_name: Rear left screw
screw3: 230,230
screw3_name: Rear right screw
screw4: 230,75
screw4_name: Front right screw
horizontal_move_z: 10
speed: 200
screw_thread: CW-M4

# This adds a bed screws adjust GCode, that moves the nozzle around for you so you can paper adjust.
[bed_screws]
screw1: 33,33
screw1_name: Front left screw
screw2: 33,202
screw2_name: Rear left screw
screw3: 202,202
screw3_name: Rear right screw
screw4: 202,33
screw4_name: Front right screw


######################################################################
# Resonance compensation
######################################################################
# More info on set up via the links below
# https://www.youtube.com/watch?v=aHQju3e2guE

# Enables input shaping.
[input_shaper]
#shaper_freq_x: 66.0
#   A frequency (in Hz) of the input shaper for X axis. This is
#   usually a resonance frequency of X axis that the input shaper
#   should suppress. For more complex shapers, like 2- and 3-hump EI
#   input shapers, this parameter can be set from different
#   considerations. The default value is 0, which disables input
#   shaping for X axis.
#shaper_freq_y: 29.8
#   A frequency (in Hz) of the input shaper for Y axis. This is
#   usually a resonance frequency of Y axis that the input shaper
#   should suppress. For more complex shapers, like 2- and 3-hump EI
#   input shapers, this parameter can be set from different
#   considerations. The default value is 0, which disables input
#   shaping for Y axis.
#shaper_type: mzv
#   A type of the input shaper to use for both X and Y axes. Supported
#   shapers are zv, mzv, zvd, ei, 2hump_ei, and 3hump_ei. The default
#   is mzv input shaper.
#shaper_type_x: 2hump_ei
#shaper_type_y: mzv
#   If shaper_type is not set, these two parameters can be used to
#   configure different input shapers for X and Y axes. The same
#   values are supported as for shaper_type parameter.
damping_ratio_x: 0.1
damping_ratio_y: 0.1
#   Damping ratios of vibrations of X and Y axes used by input shapers
#   to improve vibration suppression. Should not be changed without
#   some proper measurements, e.g. with an accelerometer. Default
#   value is 0.1 which is a good all-round value for most printers.

# Support for ADXL345 accelerometers. This support allows one to query
# accelerometer measurements from the sensor. This enables an
# ACCELEROMETER_MEASURE command (see docs/G-Codes.md for more
# information). The default chip name is "default", but one may
# specify an explicit name (eg, [adxl345 my_chip_name]).
#[adxl345]
#axes_map: x,y,z
#   The accelerometer axis for each of the printer's x, y, and z axes.
#   This may be useful if the accelerometer is mounted in an
#   orientation that does not match the printer orientation. For
#   example, one could set this to "y,x,z" to swap the x and y axes.
#   It is also possible to negate an axis if the accelerometer
#   direction is reversed (eg, "x,z,-y"). The default is "x,y,z".
#rate: 3200
#   Output data rate for ADXL345. ADXL345 supports the following data
#   rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
#   not recommended to change this rate from the default 3200, and
#   rates below 800 will considerably affect the quality of resonance
#   measurements.
#cs_pin:
#   The SPI enable pin for the sensor. This parameter must be
#   provided.
#spi_speed: 5000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 5000000.
#spi_bus:
#spi_software_sclk_pin:
#spi_software_mosi_pin:
#spi_software_miso_pin:
#   These optional parameters allow one to customize the SPI settings
#   used to communicate with the chip.

# Support for resonance testing and automatic input shaper
# calibration. In order to use most of the functionality of this
# module, additional software dependencies must be installed; refer to
# docs/Measuring_Resonances.md for more information.
#[resonance_tester]
#probe_points:
#   A list of X,Y,Z coordinates of points (one point per line) to test
#   resonances at. At least one point is required. Make sure that all
#   points with some safety margin in XY plane (~a few centimeters)
#   are reachable by the toolhead.
#accel_chip:
#   A name of the accelerometer chip to use for measurements. If
#   adxl345 chip was defined without an explicit name, this parameter
#   can simply reference it as "accel_chip: adxl345", otherwise an
#   explicit name must be supplied as well, e.g. "accel_chip: adxl345
#   my_chip_name". Either this, or the next two parameters must be
#   set.
#accel_chip_x:
#accel_chip_y:
#   Names of the accelerometer chips to use for measurements for each
#   of the axis. Can be useful, for instance, on bed slinger printer,
#   if two separate accelerometers are mounted on the bed (for Y axis)
#   and on the toolhead (for X axis). These parameters have the same
#   format as 'accel_chip' parameter. Only 'accel_chip' or these two
#   parameters must be provided.
#min_freq: 5
#   Minimum frequency to test for resonances. The default is 5 Hz.
#max_freq: 120
#   Maximum frequency to test for resonances. The default is 120 Hz.
#accel_per_hz: 75
#   This parameter is used to determine which acceleration to use to
#   test a specific frequency: accel = accel_per_hz * freq. Higher the
#   value, the higher is the energy of the oscillations. Can be set to
#   a lower than the default value if the resonances get too strong on
#   the printer. However, lower values make measurements of
#   high-frequency resonances less precise. The default value is 75
#   (mm/sec).
#hz_per_sec: 1
#   Determines the speed of the test. When testing all frequencies in
#   range [min_freq, max_freq], each second the frequency increases by
#   hz_per_sec. Small values make the test slow, and the large values
#   will decrease the precision of the test. The default value is 1.0
#   (Hz/sec == sec^-2).

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.100
#*# pid_ki = 1.407
#*# pid_kd = 79.124
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.275
#*# pid_ki = 1.581
#*# pid_kd = 849.075
#*#
#*# [bltouch]
#*# z_offset = 3.599
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.051667, 0.034167, 0.040833
#*# 	0.075000, 0.045000, 0.045000
#*# 	0.074167, 0.064167, 0.059167
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 95.7
#*# max_x = 139.04
#*# min_y = 97.30000000000001
#*# max_y = 137.0
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 66.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 29.8
